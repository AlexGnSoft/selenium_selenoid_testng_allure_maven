package prod.smoke.program_level;

import com.carespeak.domain.entities.client.Client;
import com.carespeak.domain.entities.message.MessageLogItem;
import com.carespeak.domain.entities.program.AutoRespondersStatus;
import com.carespeak.domain.entities.program.Patient;
import com.carespeak.domain.entities.program.ProgramAccess;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class ProgramAutoResponder extends AbstractProgramLevelTest {

    private static final String AUTO_RESPONDER_MESSAGE = "Your message cannot be processed. Please call 911 if this is an emergency.";
    private static final String AUTO_RESPONDER_MESSAGE_UNRECOGNIZED = "Unrecognized";
    private Patient patient;
    private Client client;

    @BeforeClass
    public void prepareClientData() {
        client = getTestClientByCode("ProgramLevelTestAutoresponder client-" + getFormattedDate("dd-MM-yy-H-mm-ss"));
        patient = new Patient();
        patient.setCellPhone(getGeneratedPhoneNumber());
        patient.setTimezone("Eastern Time (New York)");
    }

    @Test(description = "Check the auto responder goes out as expected when send an unrecognized message")
    public void unrecognizedMessage_MHM_T163() {
        String programName = "AutoGenerated program " + getFormattedDate("dd-MM-yy-H-mm");
        patient.setCellPhone(getGeneratedPhoneNumber()); //required to have unique patient for this test, in case it runs in 2nd time as a flaky test
        patient.setFirstName("ProgramAutoresponderPatient-" + getRandomString());

        site.programSteps()
                .addNewProgram(client.getName(), programName, ProgramAccess.PUBLIC)
                .addNewPatient(patient, client, programName);
        site.programSteps()
                .simulateResponse(patient.getFirstName(), "Unrecognized");

        MessageLogItem actualSms = site.programSteps()
                .getLastPatientMessageFromLogs(patient.getFirstName());

        Assert.assertEquals(actualSms.getMessage(), AUTO_RESPONDER_MESSAGE_UNRECOGNIZED, "Received message is not the same as expected!");
    }

    @Test(description = "Check that auto responder sends predefined message at Overridden status", dependsOnMethods = "unrecognizedMessage_MHM_T163")
    public void addAutoResponderOverride_MHM_T34() {
        String programName = "AutoGenerated program " + getFormattedDate("dd-MM-yy-H-mm");
        patient.setCellPhone(getGeneratedPhoneNumber()); //required to have unique patient for this test, in case it runs in 2nd time as a flaky test
        patient.setFirstName("ProgramAutoresponderPatient-" + getRandomString());

        site.programSteps()
                .addNewProgram(client.getName(), programName, ProgramAccess.PUBLIC)
                .rejectUnsolicitedMessages(client, programName, "Accepted|AGREE");
        site.programSteps()
                        .addAutoResponder(client, programName, AutoRespondersStatus.OVERRIDDEN, AUTO_RESPONDER_MESSAGE);
        site.programSteps()
                .addNewPatient(patient, client, programName)
                .simulateResponse(patient.getFirstName(), "AGREE")
                .simulateResponse(patient.getFirstName(), "Accepted");

        MessageLogItem actualSms = site.programSteps()
                .getLastPatientMessageFromLogs(patient.getFirstName());

        Assert.assertEquals(actualSms.getMessage(), AUTO_RESPONDER_MESSAGE, "Received message is not the same as expected!");
    }

    @AfterClass(alwaysRun = true)
    public void removeClient() {
        site.adminToolsSteps()
                .removeClient(client);
    }
}
