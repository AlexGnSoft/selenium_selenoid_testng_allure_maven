package prod.smoke.client_level;

import com.carespeak.domain.entities.client.Client;
import com.carespeak.domain.entities.program.ProgramAccess;
import com.carespeak.domain.entities.program.ProgramOptOutForm;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import java.util.List;

public class ClientConsentManagementTest extends AbstractClientLevelTest {

    private String programName;
    private Client client;

    @BeforeClass
    public void prepareClientData() {
        programName = "AutoGenerated program " + getFormattedDate("dd-MM-yy-H-mm");
        client = getTestClientByCode("Consent Client");
    }

    @Test(description = "Check if added header/footer appear on the web form and if made changes are visible")
    public void addedFooterAppearsOnWebForm() {
        ProgramOptOutForm expectedOptOutForm = new ProgramOptOutForm("Auto added header", "Auto added body", "Auto added footer");

        site.clientSteps()
                .addOptOutHeader(client, expectedOptOutForm.getHeader())
                .addOptOutBody(client, expectedOptOutForm.getBody())
                .addOptOutFooter(client, expectedOptOutForm.getFooter());

        ProgramOptOutForm actualOptOutForm = site.programSteps()
                .addNewProgram(client.getName(), programName, ProgramAccess.PUBLIC)
                .addOptOutHeader(client, programName, null)
                .getProgramOptOutForm(client.getName(), programName);

        Assert.assertEquals(actualOptOutForm, expectedOptOutForm, "OptOutForm not appear on program level.");
    }

    @AfterClass
    public void removeProgram() {
        site.programSteps().removeProgram(client, programName);
        List<String> programs = site.programSteps().getProgramsForClient(client);
        Assert.assertFalse(programs.contains(programName), "Program '" + programName + "' was not removed!");
    }

}
