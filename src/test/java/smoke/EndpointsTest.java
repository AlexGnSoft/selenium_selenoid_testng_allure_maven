package smoke;

import com.carespeak.domain.entities.common.Sex;
import com.carespeak.domain.entities.program.Patient;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import java.util.Arrays;
import java.util.List;

public class EndpointsTest extends SmokeBaseTest {

    List<String> expectedEndpoints = Arrays.asList("twilioSmsSender5 [TWILIO +17542272273]");

    private Patient patient;

    @BeforeClass
    public void setUp() {
        programName = "AutoGenerated program " + getFormattedDate("dd-MM-yy-H-mm");
        patient = new Patient();
        patient.setFirstName("Patient");
        patient.setLastName("Automator");
        patient.setSex(Sex.MALE);
        patient.setCellPhone("+15554622669");
        patient.setTimezone("Eastern Time (New York)");
        client = createNewClient();
        createProgram();
    }

    @Test(description = "Check client level endpoints are available on program level")
    public void endpointAvailableOnProgramLevel() {
        List<String> actualEndpoints = site.programSteps()
                .getEndpointsOnProgramLevel();

        Assert.assertTrue(actualEndpoints.containsAll(expectedEndpoints), "Actual endpoints should contain next values:\n" +
                expectedEndpoints + "\n" +
                "but endpoints is " + actualEndpoints + "\n");
    }

    @Test(description = "Check client level endpoints are available on patient level")
    public void endpointAvailableOnPatientLevel() {
        List<String> actualEndpoints = site.programSteps()
                .addNewPatient(patient, client, programName)
                .getEndpointsOnPatientLevel();

        Assert.assertTrue(actualEndpoints.containsAll(expectedEndpoints), "Actual endpoints should contain next values:\n" +
                expectedEndpoints + "\n" +
                "but endpoints is " + actualEndpoints + "\n");
    }

    @AfterClass
    public void cleanUpClientData() {
        removeClient();
    }
}
