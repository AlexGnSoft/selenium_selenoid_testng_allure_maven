package smoke;

import com.carespeak.domain.entities.common.Day;
import com.carespeak.domain.entities.common.Sex;
import com.carespeak.domain.entities.message.MessageLogItem;
import com.carespeak.domain.entities.program.Patient;
import com.carespeak.domain.entities.program.ProgramAccess;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class AutoResponderTest extends SmokeBaseTest {

    private static final String FROM_PHONE_NUMBER = "+15554622669";
    private static final String TO_ENDPOINT = "twilioSmsSender5 [TWILIO +17542272273]";

    private Patient patient;

    @BeforeClass
    public void prepareClientData() {
        programName = "AutoGenerated program " + getFormattedDate("dd-MM-yy-H-mm");
        client = createNewClient();
        site.loginSteps().openSite().loginAs(user, password);
        patient = new Patient();
        patient.setFirstName("Patient");
        patient.setLastName("Automator");
        patient.setSex(Sex.MALE);
        patient.setCellPhone("+15554622669");
        patient.setTimezone("Eastern Time (New York)");
    }

    @Test(description = "Add Auto Responders and check auto response")
    public void addAutoResponder() {
        site.clientSteps()
                .addAutoResponder(client, "It's working day!", true, Day.getWorkingDays())
                .addAutoResponder(client, "It's WEEKEND, yay!!!", true, Day.getWeekEnds());
        site.programSteps()
                .addNewProgram(client.getName(), programName, ProgramAccess.PUBLIC)
                .rejectUnsolicitedMessages(client, programName);
        site.adminToolsSteps()
                .simulateSMSToClient(patient.getCellPhone(), TO_ENDPOINT, "Unrecognized");

        MessageLogItem actualSms = site.programSteps()
                .addNewPatient(patient, client, programName)
                .goToProgramSettings(client.getName(), programName)
                .getLastMessageFromLogsForNumber(patient.getCellPhone());
        //TODO: implement assertion
        System.out.println();
    }

    @AfterClass
    public void removeClient() {
        removeClient(client);
    }
}
